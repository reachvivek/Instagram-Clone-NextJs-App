{"version":3,"file":"embla-carousel.esm.js","sources":["src/vanilla/components/alignment.ts","src/vanilla/components/animation.ts","src/vanilla/components/axis.ts","src/vanilla/components/counter.ts","src/vanilla/components/vector1d.ts","src/vanilla/components/direction.ts","src/vanilla/components/eventStore.ts","src/vanilla/components/limit.ts","src/vanilla/components/dragHandler.ts","src/vanilla/components/dragTracker.ts","src/vanilla/components/pxToPercent.ts","src/vanilla/components/utils.ts","src/vanilla/components/scrollBody.ts","src/vanilla/components/scrollBounds.ts","src/vanilla/components/scrollContain.ts","src/vanilla/components/scrollLimit.ts","src/vanilla/components/scrollLooper.ts","src/vanilla/components/scrollProgress.ts","src/vanilla/components/scrollSnap.ts","src/vanilla/components/scrollTarget.ts","src/vanilla/components/scrollTo.ts","src/vanilla/components/slideLooper.ts","src/vanilla/components/slidesInView.ts","src/vanilla/components/translate.ts","src/vanilla/components/engine.ts","src/vanilla/components/eventEmitter.ts","src/vanilla/components/options.ts","src/vanilla/index.ts"],"sourcesContent":["export type AlignmentOption = 'start' | 'center' | 'end' | number\n\ntype Params = {\n  viewSize: number\n  align: AlignmentOption\n}\n\nexport type Alignment = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(params: Params): Alignment {\n  const { viewSize, align } = params\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return (viewSize - n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: Alignment = {\n    measure,\n  }\n  return self\n}\n","type Callback = () => void\n\nexport type Animation = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): Animation {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: Callback): Callback {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: Animation = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","export type AxisOption = 'x' | 'y'\n\nexport type Axis = {\n  cross: AxisOption\n  scroll: AxisOption\n  measure: (node: HTMLElement) => number\n}\n\nexport function Axis(axis: AxisOption): Axis {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n\n  function measure(node: HTMLElement): number {\n    const { width, height } = node.getBoundingClientRect()\n    return scroll === 'x' ? width : height\n  }\n\n  const self: Axis = {\n    cross,\n    measure,\n    scroll,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\ntype Params = {\n  start: number\n  limit: Limit\n  loop: boolean\n}\n\nexport type Counter = {\n  min: number\n  max: number\n  get: () => number\n  set: (n: number) => Counter\n  add: (n: number) => Counter\n  clone: () => Counter\n}\n\nexport function Counter(params: Params): Counter {\n  const { start, limit, loop } = params\n  const { min, max } = limit\n  const type = loop ? 'loop' : 'constrain'\n  const withinLimit = limit[type]\n  let counter = withinLimit(start)\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): Counter {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): Counter {\n    if (n !== 0) {\n      const sign = n / Math.abs(n)\n      set(get() + sign)\n      return add(n + sign * -1)\n    }\n    return self\n  }\n\n  function clone(): Counter {\n    return Counter({ start: get(), limit, loop })\n  }\n\n  const self: Counter = {\n    add,\n    clone,\n    get,\n    max,\n    min,\n    set,\n  }\n  return self\n}\n","export type Vector1D = {\n  get: () => number\n  set: (v: Vector1D | number) => Vector1D\n  add: (v: Vector1D | number) => Vector1D\n  subtract: (v: Vector1D | number) => Vector1D\n  multiply: (n: number) => Vector1D\n  divide: (n: number) => Vector1D\n  normalize: () => Vector1D\n}\n\nexport function Vector1D(value: number): Vector1D {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1D | number): Vector1D {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1D | number): Vector1D {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1D | number): Vector1D {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1D {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1D {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1D {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1D | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1D = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { Vector1D } from './vector1d'\n\nexport type Direction = {\n  get: () => number\n  set: (v: Vector1D) => Direction\n}\n\nexport function Direction(value: number): Direction {\n  const direction = Vector1D(normalize(value))\n  const { get } = direction\n\n  function normalize(n: number): number {\n    return n === 0 ? 0 : n / Math.abs(n)\n  }\n\n  function set(v: Vector1D): Direction {\n    const d = normalize(v.get())\n    if (d !== 0) direction.set(d)\n    return self\n  }\n\n  const self: Direction = {\n    get,\n    set,\n  }\n  return self\n}\n","type EventRemover = () => void\ntype EventHandler = EventListener | EventListenerObject | null\ntype EventOptions = boolean | AddEventListenerOptions | undefined\n\nexport type EventStore = {\n  add: (\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options?: EventOptions,\n  ) => EventStore\n  removeAll: () => EventStore\n}\n\nexport function EventStore(): EventStore {\n  let listeners: EventRemover[] = []\n\n  function add(\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options: EventOptions = false,\n  ): EventStore {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => {\n      return node.removeEventListener(type, handler, options)\n    })\n    return self\n  }\n\n  function removeAll(): EventStore {\n    listeners = listeners.filter(remove => remove())\n    return self\n  }\n\n  const self: EventStore = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","type Limits = 'min' | 'max' | ''\n\ntype Params = {\n  min: number\n  max: number\n}\n\nexport type Limit = {\n  min: number\n  max: number\n  length: number\n  loop: (n: number) => number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(params: Params): Limit {\n  const { min, max } = params\n  const loopLimits = { min: max, max: min }\n  const constrainLimits = { min, max }\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function reachedWhich(n: number): Limits {\n    if (reachedMin(n)) return 'min'\n    if (reachedMax(n)) return 'max'\n    return ''\n  }\n\n  function removeOffset(n: number): number {\n    if (min === max) return n\n    while (reachedMin(n)) n += length\n    while (reachedMax(n)) n -= length\n    return n\n  }\n\n  function loop(n: number): number {\n    const which = reachedWhich(n)\n    return which ? loopLimits[which] : n\n  }\n\n  function constrain(n: number): number {\n    const which = reachedWhich(n)\n    return which ? constrainLimits[which] : n\n  }\n\n  const self: Limit = {\n    constrain,\n    length,\n    loop,\n    max,\n    min,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { Direction } from './direction'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Axis } from './axis'\nimport { EventStore } from './eventStore'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  element: HTMLElement\n  target: Vector1D\n  dragFree: boolean\n  dragTracker: DragTracker\n  location: Vector1D\n  animation: Animation\n  scrollTo: ScrollTo\n  scrollBody: ScrollBody\n  scrollTarget: ScrollTarget\n  index: Counter\n  limit: Limit\n  loop: boolean\n  events: EventEmitter\n}\n\nexport type DragHandler = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeActivationEvents: EventStore['removeAll']\n  removeInteractionEvents: EventStore['removeAll']\n}\n\nexport function DragHandler(params: Params): DragHandler {\n  const { target, scrollBody, dragFree, animation, axis } = params\n  const { element, dragTracker, location, events, limit } = params\n  const { scroll: scrollAxis, cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const startScroll = Vector1D(0)\n  const startCross = Vector1D(0)\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const removeActivationEvents = activationEvents.removeAll\n  const removeInteractionEvents = interactionEvents.removeAll\n  const snapForceBoost = { mouse: 2.5, touch: 3.5 }\n  const freeForceBoost = { mouse: 5, touch: 7 }\n  const baseSpeed = dragFree ? 5 : 12\n  const dragThreshold = 4\n  const edgeLimit = Limit({\n    min: limit.min - 70,\n    max: limit.max + 70,\n  })\n\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = element\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? element : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function speedFactor(forceB: number, forceA: number): number {\n    const diff = delta(Math.abs(forceB), Math.abs(forceA))\n    if (Math.abs(forceB) <= Math.abs(forceA)) return 0\n    if (forceB === 0 || forceA === 0) return 0\n    return Math.abs(diff / forceB)\n  }\n\n  function allowedForce(force: number): number {\n    const { scrollTarget, index } = params\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const seekNext = !targetChanged && Math.abs(force) > dragThreshold\n    const destination = force + location.get()\n\n    if (seekNext && !dragFree && !limit.reachedAny(destination)) {\n      const next = index.clone().add(Direction(force).get() * -1)\n      return scrollTarget.byIndex(next.get(), 0).distance\n    }\n    if (!params.loop && edgeLimit.reachedAny(destination)) {\n      const edge = edgeLimit.reachedMax(destination) ? 'max' : 'min'\n      return edgeLimit[edge] - target.get()\n    }\n    return scrollTarget.byDistance(force, !dragFree).distance\n  }\n\n  function down(evt: Event): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = delta(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useDefaultMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll.set(dragTracker.readPoint(evt, scrollAxis))\n    startCross.set(dragTracker.readPoint(evt, crossAxis))\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: Event): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up()\n      const moveScroll = dragTracker.readPoint(evt, scrollAxis).get()\n      const moveCross = dragTracker.readPoint(evt, crossAxis).get()\n      const diffScroll = delta(moveScroll, startScroll.get())\n      const diffCross = delta(moveCross, startCross.get())\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up()\n    }\n    const diff = dragTracker.pointerMove(evt)\n    const reachedLimit = limit.reachedAny(location.get())\n    const resist = !params.loop && reachedLimit ? 2 : 1\n\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(diff / resist)\n    evt.preventDefault()\n  }\n\n  function up(): void {\n    const { scrollTo } = params\n    const rawForce = dragTracker.pointerUp() * forceBoost()\n    const force = allowedForce(rawForce)\n    const factor = speedFactor(rawForce, force)\n    const isMoving = delta(target.get(), dragStartPoint.get()) >= 0.5\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(baseSpeed + baseSpeed * factor)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    events.emit('pointerUp')\n  }\n\n  function delta(pointB: number, pointA: number): number {\n    return Math.abs(pointB - pointA)\n  }\n\n  function click(evt: Event): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandler = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeActivationEvents,\n    removeInteractionEvents,\n  }\n  return self\n}\n","import { Axis, AxisOption } from './axis'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  pxToPercent: PxToPercent\n}\n\nexport type DragTracker = {\n  pointerDown: (evt: Event) => number\n  pointerMove: (evt: Event) => number\n  pointerUp: () => number\n  readPoint: (evt: any, axis: AxisOption) => Vector1D\n}\n\nexport function DragTracker(params: Params): DragTracker {\n  const { axis, pxToPercent } = params\n  const { scroll: scrollAxis } = axis\n  const coords = { x: 'clientX', y: 'clientY' }\n  const startDrag = Vector1D(0)\n  const diffDrag = Vector1D(0)\n  const lastDrag = Vector1D(0)\n  const pointValue = Vector1D(0)\n  const trackInterval = 10\n  const trackLength = 5\n  const trackTime = 100\n  let trackPoints: number[] = []\n  let lastMoveTime = new Date().getTime()\n  let isMouse = false\n\n  function readPoint(evt: any, type: AxisOption): Vector1D {\n    isMouse = !evt.touches\n    const c = coords[type]\n    const value = isMouse ? evt[c] : evt.touches[0][c]\n    return pointValue.set(value)\n  }\n\n  function pointerDown(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    startDrag.set(point)\n    lastDrag.set(point)\n    return pxToPercent.measure(startDrag.get())\n  }\n\n  function pointerMove(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n\n    if (diffTime >= trackInterval) {\n      if (diffTime >= trackTime) trackPoints = []\n      trackPoints.push(point.get())\n      lastMoveTime = nowTime\n    }\n\n    diffDrag.set(point).subtract(lastDrag)\n    lastDrag.set(point)\n    return pxToPercent.measure(diffDrag.get())\n  }\n\n  function pointerUp(): number {\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n    const currentPoint = lastDrag.get()\n\n    const force = trackPoints\n      .slice(-trackLength)\n      .map(trackPoint => currentPoint - trackPoint)\n      .sort((p1, p2) => (Math.abs(p1) < Math.abs(p2) ? 1 : -1))[0]\n\n    lastDrag.set(diffTime > trackTime || !force ? 0 : force)\n    trackPoints = []\n    return pxToPercent.measure(lastDrag.get())\n  }\n\n  const self: DragTracker = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PxToPercent = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercent {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercent = {\n    measure,\n    totalPercent,\n  }\n  return self\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return (\n    oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n  )\n}\n\nexport function arrayFromCollection(\n  nodeList: HTMLCollection,\n): HTMLElement[] {\n  return Array.prototype.slice.call(nodeList)\n}\n\nexport function debounce(\n  callback: () => void,\n  time: number,\n): () => void {\n  const timeout = { id: 0 }\n  return (): void => {\n    window.clearTimeout(timeout.id)\n    timeout.id = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function roundToDecimals(\n  decimalPoints: number,\n): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number) => Math.round(n * pow) / pow\n}\n\nexport function groupArray<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function removeClass(\n  node: HTMLElement,\n  className: string,\n): void {\n  const cl = node.classList\n  if (cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (!cl.contains(className)) cl.add(className)\n}\n","import { Direction } from './direction'\nimport { map, roundToDecimals } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  location: Vector1D\n  speed: number\n  mass: number\n}\n\nexport type ScrollBody = {\n  location: Vector1D\n  direction: Direction\n  update: () => void\n  seek: (v: Vector1D) => ScrollBody\n  settle: (v: Vector1D) => boolean\n  useSpeed: (n: number) => ScrollBody\n  useDefaultSpeed: () => ScrollBody\n  useMass: (n: number) => ScrollBody\n  useDefaultMass: () => ScrollBody\n}\n\nexport function ScrollBody(params: Params): ScrollBody {\n  const { location, speed, mass } = params\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n  const direction = Direction(0)\n  const state = { speed, mass }\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(v: Vector1D): void {\n    v.divide(state.mass)\n    acceleration.add(v)\n  }\n\n  function seek(v: Vector1D): ScrollBody {\n    attraction.set(v).subtract(location)\n    const magnitude = attraction.get()\n    const m = map(magnitude, 0, 100, 0, state.speed)\n    direction.set(attraction)\n    attraction\n      .normalize()\n      .multiply(m)\n      .subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(v: Vector1D): boolean {\n    const diff = v.get() - location.get()\n    const diffRounded = roundToTwoDecimals(diff)\n    const hasSettled = !diffRounded\n    if (hasSettled) location.set(v)\n    return hasSettled\n  }\n\n  function useSpeed(n: number): ScrollBody {\n    state.speed = n\n    return self\n  }\n\n  function useDefaultSpeed(): ScrollBody {\n    useSpeed(speed)\n    return self\n  }\n\n  function useMass(n: number): ScrollBody {\n    state.mass = n\n    return self\n  }\n\n  function useDefaultMass(): ScrollBody {\n    useMass(mass)\n    return self\n  }\n\n  const self: ScrollBody = {\n    direction,\n    location,\n    seek,\n    settle,\n    update,\n    useDefaultMass,\n    useDefaultSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  limit: Limit\n  location: Vector1D\n  scrollBody: ScrollBody\n  animation: Animation\n}\n\nexport type ScrollBounds = {\n  constrain: (v: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(params: Params): ScrollBounds {\n  const { limit, location, scrollBody, animation } = params\n  const { min, max, reachedMin, reachedMax } = limit\n  const tolerance = 50\n  let disabled = false\n  let timeout = 0\n\n  function shouldConstrain(v: Vector1D): boolean {\n    if (disabled || timeout) return false\n    if (reachedMin(location.get())) return v.get() !== min\n    if (reachedMax(location.get())) return v.get() !== max\n    return false\n  }\n\n  function constrain(v: Vector1D): void {\n    if (!shouldConstrain(v)) return\n\n    timeout = window.setTimeout(() => {\n      const constraint = limit.constrain(v.get())\n      v.set(constraint)\n      scrollBody.useSpeed(10).useMass(3)\n      animation.start()\n      timeout = 0\n    }, tolerance)\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBounds = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Limit } from './limit'\n\nexport type ScrollContainOption = '' | 'trimSnaps' | 'keepSnaps'\n\ntype Params = {\n  contentSize: number\n  viewSize: number\n  alignment: Alignment\n}\n\nexport type ScrollContain = {\n  measure: (scrollSnaps: number[], trim: boolean) => number[]\n}\n\nexport function ScrollContain(params: Params): ScrollContain {\n  const { alignment, contentSize, viewSize } = params\n  const scrollBounds = Limit({ min: -contentSize + viewSize, max: 0 })\n  const alignedWithinView = [alignment.measure(contentSize)]\n  const contentExceedsView = contentSize > viewSize\n\n  function findDuplicates(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = scrollSnaps.lastIndexOf(startSnap) + 1\n    const max = scrollSnaps.indexOf(endSnap)\n    return Limit({ min, max })\n  }\n\n  function measure(scrollSnaps: number[], trim: boolean): number[] {\n    const containedSnaps = scrollSnaps.map(scrollBounds.constrain)\n    const { min, max } = findDuplicates(containedSnaps)\n\n    if (!contentExceedsView) return alignedWithinView\n    if (!trim) return containedSnaps\n    return containedSnaps.slice(min - 1, max + 1)\n  }\n\n  const self: ScrollContain = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\ntype Params = {\n  contentSize: number\n  loop: boolean\n}\n\nexport type ScrollLimit = {\n  measure: (scrollSnaps: number[]) => Limit\n}\n\nexport function ScrollLimit(params: Params): ScrollLimit {\n  const { contentSize, loop } = params\n\n  function measure(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit({ min, max })\n  }\n\n  const self: ScrollLimit = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  contentSize: number\n  limit: Limit\n  location: Vector1D\n  pxToPercent: PxToPercent\n}\n\nexport type ScrollLooper = {\n  loop: (vectors: Vector1D[], direction: number) => void\n}\n\nexport function ScrollLooper(params: Params): ScrollLooper {\n  const { contentSize, location, limit, pxToPercent } = params\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit({ min, max })\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(vectors: Vector1D[], direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach(v => v.add(loopDistance))\n  }\n\n  const self: ScrollLooper = {\n    loop,\n  }\n  return self\n}\n","import { Limit } from './limit'\r\n\r\ntype Params = {\r\n  limit: Limit\r\n}\r\n\r\nexport type ScrollProgress = {\r\n  get: (n: number) => number\r\n}\r\n\r\nexport function ScrollProgress(params: Params): ScrollProgress {\r\n  const { max, length: scrollLength } = params.limit\r\n\r\n  function get(n: number): number {\r\n    const currentLocation = n - max\r\n    return currentLocation / -scrollLength\r\n  }\r\n\r\n  const self: ScrollProgress = {\r\n    get,\r\n  }\r\n  return self\r\n}\r\n","import { Alignment } from './alignment'\nimport { Counter } from './counter'\nimport { Limit } from './limit'\n\ntype Params = {\n  snapSizes: number[]\n  alignment: Alignment\n  loop: boolean\n}\n\nexport type ScrollSnap = {\n  measure: (index: number) => number\n}\n\nexport function ScrollSnap(params: Params): ScrollSnap {\n  const { snapSizes, alignment, loop } = params\n  const alignments = snapSizes.map(alignment.measure)\n  const distancesBetween = distancesBetweenScrollSnaps()\n\n  function distancesBetweenScrollSnaps(): number[] {\n    const limit = Limit({ min: 0, max: snapSizes.length - 1 })\n    const counter = Counter({ limit, start: 0, loop })\n\n    return snapSizes.map((size, index) => {\n      const next = counter.set(index + 1).get()\n      return size + alignments[index] - alignments[next]\n    })\n  }\n\n  function measure(index: number): number {\n    const sizes = distancesBetween.slice(0, index)\n    return sizes.reduce((a, s) => a - s, alignments[0])\n  }\n\n  const self: ScrollSnap = {\n    measure,\n  }\n  return self\n}\n","import { Counter } from './counter'\nimport { Limit } from './limit'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  index: Counter\n  loop: boolean\n  scrollSnaps: number[]\n  contentSize: number\n  limit: Limit\n  target: Vector1D\n}\n\nexport type Target = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTarget = {\n  byIndex: (target: number, direction: number) => Target\n  byDistance: (force: number, snap: boolean) => Target\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(params: Params): ScrollTarget {\n  const { loop, limit, scrollSnaps, contentSize } = params\n  const { reachedMax, reachedAny, removeOffset } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return Math.abs(d1) < Math.abs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): Target {\n    const distance = removeOffset(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map(scrollSnap => scrollSnap - distance)\n      .map(diffToSnap => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => Math.abs(d1.diff) - Math.abs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return Math.abs(shortest) * direction\n  }\n\n  function findTargetIndex(target: number, index: number): number {\n    const reachedBound = !loop && reachedAny(target)\n    if (!reachedBound) return index\n\n    const { min, max } = params.index\n    return reachedMax(target) ? min : max\n  }\n\n  function byIndex(index: number, direction: number): Target {\n    const diffToSnap = scrollSnaps[index] - params.target.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): Target {\n    const target = params.target.get() + distance\n    const targetSnap = findTargetSnap(target)\n    const index = findTargetIndex(target, targetSnap.index)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnap.distance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTarget = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { EventEmitter } from './eventEmitter'\nimport { ScrollTarget, Target } from './scrollTarget'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  animation: Animation\n  target: Vector1D\n  index: Counter\n  indexPrevious: Counter\n  scrollTarget: ScrollTarget\n  events: EventEmitter\n}\n\nexport type ScrollTo = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(params: Params): ScrollTo {\n  const { index: indexCurrent, scrollTarget, animation } = params\n  const { indexPrevious, events, target: targetDistance } = params\n\n  function scrollTo(target: Target): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetDistance.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollTo = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  scrollSnaps: number[]\n  viewSize: number\n  location: Vector1D\n  slideSizes: number[]\n  contentSize: number\n}\n\ntype LoopPoint = {\n  point: number\n  location: number\n  index: number\n  getTarget: (location: number) => number\n}\n\nexport type SlideLooper = {\n  canLoop: () => boolean\n  clear: (slides: HTMLElement[]) => void\n  loop: (slides: HTMLElement[]) => void\n  loopPoints: LoopPoint[]\n}\n\nexport function SlideLooper(params: Params): SlideLooper {\n  const { axis, location: containerLocation } = params\n  const { contentSize, viewSize, slideSizes, scrollSnaps } = params\n  const ascItems = arrayKeys(slideSizes)\n  const descItems = arrayKeys(slideSizes).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n  const loopStyle = axis.scroll === 'x' ? 'left' : 'top'\n\n  function subtractItemSizes(\n    indexes: number[],\n    from: number,\n  ): number {\n    return indexes.reduce((a: number, i) => {\n      const size = slideSizes[i]\n      return a - size\n    }, from)\n  }\n\n  function loopItemsIn(\n    sizeOfGap: number,\n    indexes: number[],\n  ): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const gapLeft = subtractItemSizes(a, sizeOfGap)\n      return gapLeft > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function loopStart(\n    sizeOfGap: number,\n    indexes: number[],\n    from: number,\n  ): number {\n    return indexes.reduce((a: number, i) => {\n      const gapFilled = a + slideSizes[i]\n      return gapFilled < sizeOfGap ? gapFilled : a\n    }, from)\n  }\n\n  function loopPointFor(\n    indexes: number[],\n    from: number,\n    direction: 0 | 1,\n  ): number {\n    const slideCount = ascItems.length - 1\n    return subtractItemSizes(\n      indexes.map(i => (i + direction) % slideCount),\n      from,\n    )\n  }\n\n  function loopPointsFor(\n    indexes: number[],\n    from: number,\n    direction: 0 | 1,\n  ): LoopPoint[] {\n    const ascIndexes = indexes.slice().sort((a, b) => a - b)\n    return ascIndexes.map(\n      (index, loopIndex): LoopPoint => {\n        const initial = contentSize * (!direction ? 0 : -1)\n        const offset = contentSize * (!direction ? 1 : 0)\n        const slidesInSpan = ascIndexes.slice(0, loopIndex)\n        const point = loopPointFor(slidesInSpan, from, direction)\n        const getTarget = (location: number): number =>\n          location > point ? initial : offset\n        return { point, getTarget, index, location: -1 }\n      },\n    )\n  }\n\n  function startPoints(): LoopPoint[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = loopItemsIn(gap, descItems)\n    const start = loopStart(gap, indexes, 0)\n    return loopPointsFor(indexes, start, 1)\n  }\n\n  function endPoints(): LoopPoint[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = loopItemsIn(gap, ascItems)\n    const start = loopStart(contentSize, ascItems, -viewSize)\n    return loopPointsFor(indexes, -start, 0)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter(i => i !== index)\n      return subtractItemSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(slides: HTMLElement[]): void {\n    loopPoints.forEach(loopPoint => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget(containerLocation.get())\n      if (target !== location) {\n        slides[index].style[loopStyle] = `${target}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(slides: HTMLElement[]): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[loopStyle] = ''\n    })\n  }\n\n  const self: SlideLooper = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { arrayKeys } from './utils'\n\ntype Params = {\n  contentSize: number\n  slideSizes: number[]\n  viewSize: number\n  loop: boolean\n  inViewThreshold: number\n}\n\ntype SlidePoint = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInView = {\n  check: (location: number) => number[]\n}\n\nexport function SlidesInView(params: Params): SlidesInView {\n  const { contentSize, slideSizes, viewSize } = params\n  const { inViewThreshold, loop } = params\n  const thresholds = slideSizes.map(s => s * inViewThreshold)\n  const scrollSnaps = arrayKeys(slideSizes).map(scrollSnap)\n  const pointsToCheck = concatSlidePoints()\n\n  function scrollSnap(index: number): number {\n    const span = slideSizes.slice(0, index)\n    return span.reduce((a, s) => a - s, 0)\n  }\n\n  function concatSlidePoints(): SlidePoint[] {\n    const offsets = loop ? [0, contentSize, -contentSize] : [0]\n    return offsets.map(slidePoints).reduce((a, b) => a.concat(b), [])\n  }\n\n  function slidePoints(offset: number): SlidePoint[] {\n    return scrollSnaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + thresholds[index] + offset,\n      end: snap + viewSize - thresholds[index] + offset,\n      index,\n    }))\n  }\n\n  function check(location: number): number[] {\n    return pointsToCheck.reduce((list: number[], point) => {\n      const { index, start, end } = point\n      const inList = list.indexOf(index) !== -1\n      const inView = start < location && end > location\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInView = {\n    check,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { roundToDecimals } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  container: HTMLElement\n}\n\nexport type Translate = {\n  clear: () => void\n  to: (vector: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(params: Params): Translate {\n  const { axis, container } = params\n  const translates = { x, y }\n  const translateAxis = translates[axis.scroll]\n  const roundToTwoDecimals = roundToDecimals(2)\n  const containerStyle = container.style\n  let disabled = false\n  let location = 0\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(v: Vector1D): void {\n    if (disabled) return\n    const target = roundToTwoDecimals(v.get())\n\n    if (location !== target) {\n      getComputedStyle(container).transform\n      containerStyle.transform = translateAxis(target)\n      location = target\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n    location = 0\n  }\n\n  const self: Translate = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Animation } from './animation'\nimport { Axis } from './axis'\nimport { Counter } from './counter'\nimport { DragHandler } from './dragHandler'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Limit } from './limit'\nimport { Options } from './options'\nimport { PxToPercent } from './pxToPercent'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollBounds } from './scrollBounds'\nimport { ScrollContain } from './scrollContain'\nimport { ScrollLimit } from './scrollLimit'\nimport { ScrollLooper } from './scrollLooper'\nimport { ScrollProgress } from './scrollProgress'\nimport { ScrollSnap } from './scrollSnap'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { SlideLooper } from './slideLooper'\nimport { SlidesInView } from './slidesInView'\nimport { Translate } from './translate'\nimport { arrayKeys, groupArray } from './utils'\nimport { Vector1D } from './vector1d'\n\nexport type Engine = {\n  axis: Axis\n  animation: Animation\n  scrollBounds: ScrollBounds\n  scrollLooper: ScrollLooper\n  scrollProgress: ScrollProgress\n  index: Counter\n  indexPrevious: Counter\n  limit: Limit\n  location: Vector1D\n  options: Options\n  pxToPercent: PxToPercent\n  scrollBody: ScrollBody\n  dragHandler: DragHandler\n  slideLooper: SlideLooper\n  slidesInView: SlidesInView\n  target: Vector1D\n  translate: Translate\n  scrollTo: ScrollTo\n  scrollTarget: ScrollTarget\n  scrollSnaps: number[]\n  snapIndexes: number[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: Options,\n  events: EventEmitter,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    containScroll,\n  } = options\n\n  // Measurements\n  const axis = Axis(scrollAxis)\n  const pxToPercent = PxToPercent(axis.measure(container))\n  const viewSize = pxToPercent.totalPercent\n  const slideSizes = slides.map(axis.measure).map(pxToPercent.measure)\n  const groupedSizes = groupArray(slideSizes, slidesToScroll)\n  const snapSizes = groupedSizes.map(g => g.reduce((a, s) => a + s))\n  const snapIndexes = arrayKeys(snapSizes)\n  const contentSize = slideSizes.reduce((a, s) => a + s, 0)\n  const alignment = Alignment({ align, viewSize })\n  const scrollSnap = ScrollSnap({ snapSizes, alignment, loop })\n  const defaultSnaps = snapIndexes.map(scrollSnap.measure)\n  const contain = ScrollContain({ alignment, contentSize, viewSize })\n  const shouldContain = !loop && containScroll !== ''\n  const trimSnaps = containScroll === 'trimSnaps'\n  const containedSnaps = contain.measure(defaultSnaps, trimSnaps)\n  const scrollSnaps = shouldContain ? containedSnaps : defaultSnaps\n\n  // Index\n  const indexMax = Math.max(0, scrollSnaps.length - 1)\n  const indexSpan = Limit({ min: 0, max: indexMax })\n  const index = Counter({ limit: indexSpan, start: startIndex, loop })\n  const indexPrevious = index.clone()\n\n  // ScrollLimit\n  const scrollLimit = ScrollLimit({ loop, contentSize })\n  const limit = scrollLimit.measure(scrollSnaps)\n\n  // Draw\n  const update = (): void => {\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (!dragHandler.pointerDown()) {\n      if (!loop) engine.scrollBounds.constrain(target)\n      if (settled) {\n        engine.animation.stop()\n        events.emit('settle')\n      }\n    }\n    if (loop) {\n      const direction = engine.scrollBody.direction.get()\n      engine.scrollLooper.loop(loopVectors, direction)\n      engine.slideLooper.loop(slides)\n    }\n\n    if (!settled) events.emit('scroll')\n    engine.translate.to(engine.scrollBody.location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const loopVectors = [location, target]\n  const scrollBody = ScrollBody({ location, speed, mass: 1 })\n  const scrollTarget = ScrollTarget({\n    contentSize,\n    index,\n    limit,\n    loop,\n    scrollSnaps,\n    target,\n  })\n  const scrollTo = ScrollTo({\n    animation,\n    events,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n  })\n\n  // DragHandler\n  const dragHandler = DragHandler({\n    animation,\n    axis,\n    dragFree,\n    dragTracker: DragTracker({\n      axis,\n      pxToPercent,\n    }),\n    element: root,\n    events,\n    index,\n    limit,\n    location,\n    loop,\n    scrollBody,\n    scrollTo,\n    scrollTarget,\n    target,\n  })\n\n  // Slider\n  const engine: Engine = {\n    animation,\n    axis,\n    dragHandler,\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds({\n      animation,\n      limit,\n      location,\n      scrollBody,\n    }),\n    scrollLooper: ScrollLooper({\n      contentSize,\n      limit,\n      location,\n      pxToPercent,\n    }),\n    scrollProgress: ScrollProgress({\n      limit,\n    }),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper({\n      axis,\n      contentSize,\n      location,\n      scrollSnaps,\n      slideSizes,\n      viewSize,\n    }),\n    slidesInView: SlidesInView({\n      contentSize,\n      inViewThreshold,\n      loop,\n      slideSizes,\n      viewSize,\n    }),\n    snapIndexes,\n    target,\n    translate: Translate({\n      axis,\n      container,\n    }),\n  }\n  return engine\n}\n","type Callback = (evt: EmblaEvent) => void\ntype Listeners = { [key in EmblaEvent]: Callback[] }\n\nexport type EmblaEvent =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitter = {\n  emit: (evt: EmblaEvent) => EventEmitter\n  on: (evt: EmblaEvent, cb: Callback) => EventEmitter\n  off: (evt: EmblaEvent, cb: Callback) => EventEmitter\n}\n\nexport function EventEmitter(): EventEmitter {\n  const listeners: Listeners = {\n    destroy: [],\n    pointerDown: [],\n    pointerUp: [],\n    init: [],\n    reInit: [],\n    resize: [],\n    scroll: [],\n    select: [],\n    settle: [],\n  }\n\n  function emit(evt: EmblaEvent): EventEmitter {\n    listeners[evt].forEach(e => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].filter(e => e !== cb)\n    return self\n  }\n\n  const self: EventEmitter = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOption } from './alignment'\nimport { AxisOption } from './axis'\nimport { ScrollContainOption } from './scrollContain'\n\nexport type Options = {\n  align: AlignmentOption\n  axis: AxisOption\n  containScroll: ScrollContainOption\n  containerSelector: string\n  dragFree: boolean\n  draggable: boolean\n  draggableClass: string\n  draggingClass: string\n  inViewThreshold: number\n  loop: boolean\n  selectedClass: string\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: Options = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  containerSelector: '*',\n  dragFree: false,\n  draggable: true,\n  draggableClass: 'is-draggable',\n  draggingClass: 'is-dragging',\n  inViewThreshold: 0,\n  loop: false,\n  selectedClass: 'is-selected',\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptions = Partial<Options>\n","import { Engine } from './components/engine'\nimport { EventEmitter, EmblaEvent } from './components/eventEmitter'\nimport { EventStore } from './components/eventStore'\nimport { defaultOptions, EmblaOptions } from './components/options'\nimport {\n  addClass,\n  arrayFromCollection,\n  debounce,\n  removeClass,\n} from './components/utils'\n\nexport type EmblaCarousel = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  dangerouslyGetEngine: () => Engine\n  destroy: () => void\n  off: EventEmitter['off']\n  on: EventEmitter['on']\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptions) => void\n  scrollNext: () => void\n  scrollPrev: () => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  sliderRoot: HTMLElement,\n  userOptions: EmblaOptions = {},\n): EmblaCarousel {\n  const events = EventEmitter()\n  const eventStore = EventStore()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let options = Object.assign({}, defaultOptions)\n  let rootElementSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  activate(userOptions)\n\n  function storeElements(): void {\n    if (!sliderRoot) throw new Error('Missing root node 😢')\n\n    const selector = options.containerSelector\n    const sliderContainer = sliderRoot.querySelector(selector)\n\n    if (!sliderContainer) throw new Error('Missing container node 😢')\n\n    container = sliderContainer as HTMLElement\n    slides = arrayFromCollection(container.children)\n  }\n\n  function activate(partialOptions: EmblaOptions = {}): void {\n    storeElements()\n    options = Object.assign(options, partialOptions)\n    engine = Engine(sliderRoot, container, slides, options, events)\n\n    const {\n      axis,\n      scrollBody,\n      translate,\n      dragHandler,\n      slideLooper,\n    } = engine\n    const {\n      loop,\n      draggable,\n      draggableClass,\n      selectedClass,\n      draggingClass,\n    } = options\n\n    rootElementSize = axis.measure(sliderRoot)\n    eventStore.add(window, 'resize', debouncedResize)\n    translate.to(scrollBody.location)\n    slides.forEach(slideFocusEvent)\n    dragHandler.addActivationEvents()\n\n    if (loop) {\n      if (!slideLooper.canLoop()) return reActivate({ loop: false })\n      slideLooper.loop(slides)\n    }\n    if (draggable && slides.length) {\n      if (draggableClass) {\n        addClass(sliderRoot, draggableClass)\n      }\n      if (draggingClass) {\n        events.on('pointerDown', toggleDraggingClass)\n        events.on('pointerUp', toggleDraggingClass)\n      }\n    } else {\n      events.on('pointerDown', dragHandler.removeInteractionEvents)\n    }\n    if (selectedClass) {\n      toggleSelectedClass()\n      events.on('select', toggleSelectedClass)\n      events.on('pointerUp', toggleSelectedClass)\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function toggleDraggingClass(evt: EmblaEvent): void {\n    const { draggingClass } = options\n    if (evt === 'pointerDown') addClass(sliderRoot, draggingClass)\n    else removeClass(sliderRoot, draggingClass)\n  }\n\n  function toggleSelectedClass(): void {\n    const { selectedClass } = options\n    const inView = slidesInView(true)\n    const notInView = slidesNotInView(true)\n    notInView.forEach(i => removeClass(slides[i], selectedClass))\n    inView.forEach(i => addClass(slides[i], selectedClass))\n  }\n\n  function slideFocusEvent(slide: HTMLElement, index: number): void {\n    const focus = (): void => {\n      const groupIndex = Math.floor(index / options.slidesToScroll)\n      const selectedGroup = index ? groupIndex : index\n      sliderRoot.scrollLeft = 0\n      scrollTo(selectedGroup)\n    }\n    eventStore.add(slide, 'focus', focus, true)\n  }\n\n  function reActivate(partialOptions: EmblaOptions = {}): void {\n    const startIndex = selectedScrollSnap()\n    const newOptions = Object.assign({ startIndex }, partialOptions)\n    deActivate()\n    activate(newOptions)\n    events.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeActivationEvents()\n    engine.dragHandler.removeInteractionEvents()\n    engine.animation.stop()\n    eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear(slides)\n    removeClass(sliderRoot, options.draggableClass)\n    slides.forEach(s => removeClass(s, options.selectedClass))\n    events.off('select', toggleSelectedClass)\n    events.off('pointerUp', toggleSelectedClass)\n    events.off('pointerDown', toggleDraggingClass)\n    events.off('pointerUp', toggleDraggingClass)\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    engine = {} as Engine\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    const newRootElementSize = engine.axis.measure(sliderRoot)\n    if (rootElementSize !== newRootElementSize) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target = false): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target = false): number[] {\n    const inView = slidesInView(target)\n    return engine.snapIndexes.filter(i => inView.indexOf(i) === -1)\n  }\n\n  function scrollTo(index: number): void {\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(index, 0)\n  }\n\n  function scrollNext(): void {\n    const next = engine.index.clone().add(1)\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(next.get(), -1)\n  }\n\n  function scrollPrev(): void {\n    const prev = engine.index.clone().add(-1)\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(prev.get(), 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function dangerouslyGetEngine(): Engine {\n    return engine\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarousel = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    dangerouslyGetEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  return self\n}\n\nexport default EmblaCarousel\n"],"names":["Alignment","params","viewSize","align","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","scroll","cross","node","_a","getBoundingClientRect","width","height","Counter","limit","loop","min","max","type","withinLimit","counter","get","set","add","sign","Math","abs","clone","Vector1D","value","vector","readNumber","subtract","multiply","divide","normalize","Direction","direction","v","d","EventStore","listeners","handler","options","addEventListener","push","removeEventListener","removeAll","filter","remove","Limit","loopLimits","constrainLimits","length","reachedMin","reachedMax","reachedAny","reachedWhich","removeOffset","which","constrain","DragHandler","target","scrollBody","dragFree","animation","element","dragTracker","location","events","scrollAxis","crossAxis","focusNodes","startScroll","startCross","dragStartPoint","activationEvents","interactionEvents","removeActivationEvents","removeInteractionEvents","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","dragThreshold","edgeLimit","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","isFocusNode","name","nodeName","indexOf","forceBoost","boost","speedFactor","forceB","forceA","diff","delta","allowedForce","force","scrollTarget","index","currentLocation","byDistance","targetChanged","seekNext","destination","next","byIndex","distance","edge","evt","button","isMoving","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useDefaultMass","useSpeed","readPoint","emit","cancelable","moveScroll","moveCross","diffScroll","diffCross","pointerMove","reachedLimit","resist","scrollTo","rawForce","pointerUp","factor","pointB","pointA","clickAllowed","DragTracker","pxToPercent","coords","x","y","startDrag","diffDrag","lastDrag","pointValue","trackInterval","trackLength","trackTime","trackPoints","lastMoveTime","Date","getTime","touches","c","point","nowTime","diffTime","currentPoint","slice","map","trackPoint","sort","p1","p2","PxToPercent","viewInPx","totalPercent","iStart","iStop","oStart","oStop","arrayFromCollection","nodeList","Array","prototype","call","debounce","time","timeout","id","clearTimeout","setTimeout","roundToDecimals","decimalPoints","pow","round","groupArray","array","size","groups","i","arrayKeys","Object","keys","removeClass","className","cl","classList","contains","addClass","ScrollBody","speed","mass","roundToTwoDecimals","velocity","acceleration","attraction","state","update","applyForce","seek","magnitude","m","settle","diffRounded","hasSettled","useDefaultSpeed","useMass","ScrollBounds","tolerance","disabled","shouldConstrain","constraint","toggleActive","ScrollContain","alignment","contentSize","scrollBounds","alignedWithinView","contentExceedsView","findDuplicates","scrollSnaps","startSnap","endSnap","lastIndexOf","trim","containedSnaps","ScrollLimit","ScrollLooper","shouldLoop","vectors","loopDistance","forEach","ScrollProgress","scrollLength","ScrollSnap","snapSizes","alignments","distancesBetween","distancesBetweenScrollSnaps","sizes","reduce","a","s","ScrollTarget","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","t1","t2","t3","shortest","findTargetIndex","reachedBound","snap","targetSnap","snapDistance","ScrollTo","indexCurrent","indexPrevious","targetDistance","distanceDiff","indexDiff","targetIndex","SlideLooper","containerLocation","slideSizes","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","loopStyle","subtractItemSizes","indexes","from","loopItemsIn","sizeOfGap","gapLeft","loopStart","gapFilled","loopPointFor","slideCount","loopPointsFor","ascIndexes","b","loopIndex","initial","offset","slidesInSpan","getTarget","gap","canLoop","every","otherIndexes","slides","loopPoint","style","clear","SlidesInView","inViewThreshold","thresholds","pointsToCheck","concatSlidePoints","span","offsets","slidePoints","check","list","inList","inView","Translate","container","translates","translateAxis","containerStyle","to","getComputedStyle","transform","Engine","root","startIndex","slidesToScroll","containScroll","groupedSizes","g","snapIndexes","defaultSnaps","contain","shouldContain","trimSnaps","indexMax","indexSpan","scrollLimit","engine","settled","dragHandler","scrollLooper","loopVectors","slideLooper","translate","startLocation","scrollProgress","slidesInView","EventEmitter","destroy","init","reInit","resize","select","e","on","off","defaultOptions","containerSelector","draggable","draggableClass","draggingClass","selectedClass","EmblaCarousel","sliderRoot","userOptions","eventStore","debouncedResize","reActivate","activated","rootElementSize","activate","storeElements","Error","selector","sliderContainer","querySelector","children","partialOptions","slideFocusEvent","toggleDraggingClass","toggleSelectedClass","notInView","slidesNotInView","slide","focus","groupIndex","floor","selectedGroup","scrollLeft","selectedScrollSnap","newOptions","deActivate","newRootElementSize","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","dangerouslyGetEngine","containerNode","slideNodes"],"mappings":"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"}